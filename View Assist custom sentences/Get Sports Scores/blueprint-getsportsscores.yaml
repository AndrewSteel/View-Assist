# Special thanks to Mr. Picc010 for his contribution to this blueprint
blueprint:
  name: View Assist - Get Sports Scores
  description: Get sports scores for your favorite teams (View Assist getsportsscores v 1.0.0)
  domain: automation
  input:
    command:
      name: Command
      description: The phrase you want to use to trigger getting the score for a team
      default: "how did the {team} do | how are the {team} doing"
    team_tracker:
      name: Team Tracker Sensor
      description: The Team Tracker sesnor entity that holds data (example sensor.team_tracker)
      default: "sensor.team_tracker"
      selector:
        entity:
          filter:
            - domain: sensor       
    group_entity: 
      name: Group Entity
      description: The group entity that holds the list of ViewAssist devices
      selector:
        entity:
          filter:
            - domain: group
      default: "group.viewassist_satellites" 
    view:
      name: Dashboard Sports view
      description: The View Assist dashboard view to use for sports scores (example /dashboard-viewassist/sports)
      default: "/dashboard-viewassist/sports"       
trigger:
  - platform: conversation
    command: !input command
condition: []
action:
  - variables:
      group_entity: !input group_entity
      view: !input view
      team_tracker: !input team_tracker
      target_satellite_device: |-
        {% for sat in expand(group_entity) %}
          {% if (device_id(sat.attributes.mic_device)  == trigger.device_id) or (device_id(sat.attributes.display_device)  == trigger.device_id) %}
            {{ sat.entity_id }}
          {% endif %}
        {% endfor %}
      target_display_device: "{{ device_id(state_attr(target_satellite_device, 'display_device')) }}"
      target_mediaplayer_device: "{{ state_attr(target_satellite_device, 'mediaplayer_device') }}"
      target_satellite_device_type: "{{ state_attr(target_satellite_device, 'type') }}"
      mlb_teams:
        d backs: ari
        braves: atl
        orioles: bal
        red sox: bos
        cubs: chc
        white sox: chw
        reds: cin
        guardians: cle
        rockies: col
        tigers: det
        astros: hou
        royals: kc
        angels: laa
        dodgers: lad
        marlins: mia
        brewers: mil
        twins: min
        mets: nym
        yankees: nyy
        athletics: oak
        phillies: phi
        pirates: pit
        padres: sd
        giants: sf
        mariners: sea
        cardinals: stl
        rays: tb
        rangers: tex
        blue jays: tor
        nationals: wsh
      nfl_teams:
        falcons: atl
        ravens: bal
        bills: buf
        panthers: car
        bears: chi
        bengals: cin
        browns: cle
        cowboys: dal
        broncos: den
        lions: det
        packers: gb
        texans: hou
        colts: ind
        jaguars: jax
        chiefs: kc
        raiders: lv
        chargers: lac
        rams: lar
        dolphins: mia
        vikings: min
        patriots: ne
        saints: "no"
        jets: nyj
        eagles: phi
        steelers: pit
        49ers: sf
        seahawks: sea
        buccaneers: tb
        titans: ten
        commanders: was
  - if:
      - condition: template
        value_template: "{{ (trigger.slots.team)|lower in mlb_teams }}"
    then:
      - variables:
          query_team: "{{ mlb_teams[(trigger.slots.team)|lower] }}"
          sport_path: baseball
          league_path: mlb
      - service: teamtracker.call_api
        target:
          entity_id: "{{ team_tracker }}"
        data:
          sport_path: "{{ sport_path }}"
          team_id: "{{ query_team |lower}}"
          league_path: "{{ league_path }}"
        enabled: true
  - if:
      - condition: template
        value_template: "{{ (trigger.slots.team)|lower in nfl_teams }}"
    then:
      - variables:
          query_team: "{{ nfl_teams[(trigger.slots.team)|lower] }}"
          sport_path: football
          league_path: nfl
      - service: teamtracker.call_api
        target:
          entity_id: "{{ team_tracker }}"
        data:
          sport_path: "{{ sport_path }}"
          team_id: "{{ query_team |lower}}"
          league_path: "{{ league_path }}"
        enabled: true
    enabled: true
  - set_conversation_response: |-
      {% if is_state('sensor.team_tracker', 'POST')%} 
        The {{state_attr('sensor.team_tracker','team_name')}} Played the {{state_attr('sensor.team_tracker','opponent_name')}} and 
          {% if is_state_attr('sensor.team_tracker','team_winner', false) %}
            lost
          {% else %}
            won
          {% endif %} 
        {{state_attr('sensor.team_tracker','team_score')}} - {{state_attr('sensor.team_tracker','opponent_score')}}  
      {% elif is_state('sensor.team_tracker', 'PRE') %} 
        The {{state_attr('sensor.team_tracker','team_name')}} play the {{state_attr('sensor.team_tracker','opponent_name')}} {{state_attr('sensor.team_tracker','kickoff_in')}} 
      {% elif is_state('sensor.team_tracker', 'IN') %} 
        The {{state_attr('sensor.team_tracker','team_name')}} are currently playing the {{state_attr('sensor.team_tracker','opponent_name')}}. 
        The score is {{state_attr('sensor.team_tracker','team_name')}} {{state_attr('sensor.team_tracker','team_score')}}, {{state_attr('sensor.team_tracker','opponent_name')}}  {{state_attr('sensor.team_tracker','opponent_score')}} 
      {% elif is_state('sensor.team_tracker', 'NOT_FOUND') %} 
        The {{ trigger.slots.team }} have no games on today's schedule
      {% else %} 
        Sorry.  I could not find any recent or upcoming games for the {{ trigger.slots.team }}
      {% endif %}
  - if:
      - condition: template
        value_template: "{{ target_satellite_device_type != 'audio_only' }}"
    then:
      - service: python_script.set_state
        data:
          entity_id: "{{ target_satellite_device }}"
          title: ""
          team_tracker: "{{ team_tracker }}"
      - service: browser_mod.navigate
        data:
          path: "{{ view }}"
        target:
          device_id: "{{ target_display_device }}"
mode: single
